@property --float-x {
    syntax: '<length>';
    inherits: true;
    initial-value: 0px;
}

@property --float-y {
    syntax: '<length>';
    inherits: true;
    initial-value: 0px;
}

@property --float-z {
    syntax: '<length>';
    inherits: true;
    initial-value: 0px;
}

:root {
    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
    background-color: rgb(219, 219, 219);
}

body {
    margin: 0;
    height: 100vh;
    position: relative;
    display: grid;
    justify-items: center;
    align-items: center;
    grid-template-rows: auto 1fr;
    overflow: hidden;
    background-color: rgb(43, 43, 43);

    direction: rtl;
}

.search-container {
    align-self: self-start;
    margin-top: 2em;
}

.results-container {
    width: 100%;
    height: 100%;

    perspective: 1000px;
    perspective-origin: center center;

    transition: transform 0.5s ease-in-out;
}

#resultsList {
    list-style-type: none;
    margin: 0;
    padding: 0;
    width: 100%;
    height: 100%;
    position: relative;
    display: grid;
    place-content: center center;

    transform-style: preserve-3d;
}

#resultsList>li {
    grid-area: 1/1/-1/-1;
    backdrop-filter: blur(10px);
    background-color: rgba(255, 255, 255, 0.7);
    display: grid;
    place-content: stretch stretch;
    transform-style: preserve-3d;
    transition: all 2s cubic-bezier(0.4, 0.0, 0.2, 1);
    border: 1px solid black;

    width: calc(15vw - 2px);
    height: calc(10vh - 2px);
    border-radius: 10px;

    --col-width: 20vw;
    --row-height: 12vh;
    --cols: 5;
    --rows: 10;


    --layer-x: calc(var(--col-width) * (mod(var(--index), var(--cols)) - round(down, var(--cols) / 2)));
    --layer-y: calc(var(--row-height) * (round(down, var(--index) / var(--cols)) - round(down, var(--rows) / 2)));
    --layer-z: -1000px;

    &[layer="1"] {
        --cols: 5;
        --rows: 11;
        --layer-z: calc(-00px + sin(var(--index)) * 100px);
    }

    &[layer="2"] {
        --cols: 21;
        --rows: 21;
        --layer-z: calc(-1000px + sin(var(--index)) * 500px);
    }

    &[layer="3"] {
        --cols: 41;
        --rows: 41;
        --layer-z: calc(-2000px + sin(var(--index)) * 1000px);
        filter: blur(1px);
        opacity: 0.8;
    }

    --float-x: 0;
    --float-y: 0;
    --float-z: 0;

    transform: translateX(calc(var(--layer-x) + sin(var(--index)) * 10px)) translateY(var(--layer-y)) translateZ(calc(var(--layer-z) + sin(var(--index)) * 10px));
    transform: translateX(var(--layer-x)) translateY(var(--layer-y)) translateZ(-10000px);
    transform: translateX(calc(var(--layer-x) + sin(var(--index)) * 10px + var(--float-x))) translateY(calc(var(--layer-y) + sin(var(--index)) * 10px + var(--float-y))) translateZ(calc(var(--layer-z) + sin(var(--index)) * 10px + var(--float-z)));

    animation: float-x calc((4 + sin(var(--index) + 4)) * 1s) ease-in-out calc(sin(var(--index) + 0) * 2s) infinite alternate,
    float-y calc((4 + sin(var(--index) + 5)) * 1s) ease-in-out calc(sin(var(--index) + 1) * 2s) infinite alternate,
    float-z calc((4 + sin(var(--index) + 6)) * 1s) ease-in-out calc(sin(var(--index) + 2) * 2s) infinite alternate;

    a {
        display: grid;
        place-items: center stretch;
        text-decoration: none;
        /* grid-auto-flow: column; */
        grid-template-columns: auto 1fr;
        transform-style: preserve-3d;

        >* {
            /* grid-area: 1/1/-1/-1; */
        }

        img {
            height: calc(10vh - 2px);
            object-fit: contain;
            max-width: 100%;
            max-height: 100%;
            display: block;
            border-radius: 10px;
            /* transition: transform 0.3s ease-in-out; */
            transform: translateZ(0px);
            transform-origin: center center;
        }

        span {
            text-align: center;
            color: black;
            text-decoration: none;
            font-weight: bold;
            margin: 0.1em;
            /* transition: transform 0.3s ease-in-out; */
            transform: translateZ(0px);
            transform-origin: center center;
        }
    }

    a:hover {
        img {
            transform: translateZ(20px);
        }

        span {
            transform: translateZ(20px);
        }
    }
}

@keyframes float-x {
    from {
        --float-x: 0px;
    }

    to {
        --float-x: 10px;
    }
}

@keyframes float-y {
    from {
        --float-y: 0px;
    }

    to {
        --float-y: 10px;
    }
}

@keyframes float-z {
    from {
        --float-z: 0px;
    }

    to {
        --float-z: 10px;
    }
}